{"remainingRequest":"/Users/laurelwoodhouse/Documents/AppitizerContest/hello-world/node_modules/babel-loader/lib/index.js!/Users/laurelwoodhouse/Documents/AppitizerContest/hello-world/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/laurelwoodhouse/Documents/AppitizerContest/hello-world/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/laurelwoodhouse/Documents/AppitizerContest/hello-world/src/components/Quiz.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/laurelwoodhouse/Documents/AppitizerContest/hello-world/src/components/Quiz.vue","mtime":1601852892000},{"path":"/Users/laurelwoodhouse/Documents/AppitizerContest/hello-world/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/laurelwoodhouse/Documents/AppitizerContest/hello-world/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/laurelwoodhouse/Documents/AppitizerContest/hello-world/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/laurelwoodhouse/Documents/AppitizerContest/hello-world/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgcmF0ZSBmcm9tICd2dWUtcmF0ZSc7CmltcG9ydCAndnVlLXJhdGUvZGlzdC92dWUtcmF0ZS5jc3MnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpWdWUudXNlKHJhdGUpOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hvbWUnLAogIHByb3BzOiB7CiAgICB0ZWFtOiBTdHJpbmcKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBxdWVzdGlvbnM6IFt7CiAgICAgICAgdGl0bGU6ICJBcHBlYXJhbmNlIiwKICAgICAgICB2YWx1ZTogbnVsbAogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICJUYXN0ZSIsCiAgICAgICAgdmFsdWU6IG51bGwKICAgICAgfSwgewogICAgICAgIHRpdGxlOiAiQ3JlYXRpdml0eSIsCiAgICAgICAgdmFsdWU6IG51bGwKICAgICAgfSwgewogICAgICAgIHRpdGxlOiAiUG9ydGlvbiBTaXplIiwKICAgICAgICB2YWx1ZTogbnVsbAogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICJUZXh0dXJlIiwKICAgICAgICB2YWx1ZTogbnVsbAogICAgICB9XSwKICAgICAgYW5zd2VyczogW10sCiAgICAgIGVycm9yOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgc3VibWl0OiBmdW5jdGlvbiBzdWJtaXQoKSB7CiAgICAgIC8vdmVyaWZ5IGFsbCBmaWxsZWQgaW4KICAgICAgLy8gdGhpcy5xdWVzdGlvbnMuZm9yRWFjaChxID0+IHsKICAgICAgLy8gICAgIGlmIChxLnZhbHVlPT1udWxsKXsKICAgICAgLy8gICAgICAgICB0aGlzLmVycm9yID0gImZpbGwgYWxsIHBsZWFzZSEiCiAgICAgIC8vICAgICAgICAgcmV0dXJuCiAgICAgIC8vICAgICB9CiAgICAgIC8vIH0pOwogICAgICAvLyAgc2F2ZSBpdCBzb21ld2hlcmUKICAgICAgLy8gY29uc3QgZnMgPSByZXF1aXJlKCdmcycpOwogICAgICAvLyBsZXQgZGF0YSA9IEpTT04uc3RyaW5naWZ5KHRoaXMucXVlc3Rpb24sIG51bGwsIDIpOwogICAgICAvLyBmcy53cml0ZUZpbGUoJ3Rlc3QuanNvbicsIGRhdGEsIChlcnIpID0+IHsKICAgICAgLy8gICAgIGlmIChlcnIpIHRocm93IGVycjsKICAgICAgLy8gICAgIGNvbnNvbGUubG9nKCdEYXRhIHdyaXR0ZW4gdG8gZmlsZScpOwogICAgICAvLyB9KTsKICAgICAgLy8gYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5wb3N0WydDb250ZW50LVR5cGUnXSA9J2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCc7CiAgICAgIGF4aW9zLmdldCgibG9jYWxob3N0OjgwODEvdGVzdCIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICB9KTsKICAgICAgY29uc29sZS5sb2coInBycG8iLCB0aGlzLnRlYW0pOwogICAgfSwKICAgIG9uQWZ0ZXJlUmF0ZTogZnVuY3Rpb24gb25BZnRlcmVSYXRlKHJhdGUsIHF1ZXN0aW9uKSB7CiAgICAgIHF1ZXN0aW9uLnZhbHVlID0gcmF0ZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Quiz.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,IAAA,MAAA,UAAA;AACA,OAAA,4BAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAGA,GAAA,CAAA,GAAA,CAAA,IAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,SAAA,EAAA,CAAA;AACA,QAAA,KAAA,EAAA,YADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA,EAIA;AACA,QAAA,KAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAJA,EAOA;AACA,QAAA,KAAA,EAAA,YADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAPA,EAUA;AACA,QAAA,KAAA,EAAA,cADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAVA,EAaA;AACA,QAAA,KAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAbA,CADA;AAkBA,MAAA,OAAA,EAAA,EAlBA;AAmBA,MAAA,KAAA,EAAA;AAnBA,KAAA;AAAA,GALA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,qBAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,OAHA;AAIA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,KAAA,IAAA;AACA,KAvBA;AAwBA,IAAA,YAxBA,wBAwBA,IAxBA,EAwBA,QAxBA,EAwBA;AACA,MAAA,QAAA,CAAA,KAAA,GAAA,IAAA;AAEA;AA3BA;AA1BA,CAAA","sourcesContent":["<template>\n    <div class=\"page\">\n        <h3>You are rating team: {{team}}</h3>\n        <div v-for=\"question in questions\" :key=\"question.title\">\n            <h3>{{question.title}}</h3>\n            <rate :length=\"5\"  @after-rate=\"(rate)=>onAftereRate(rate, question)\"\n                :ratedesc=\"['Very bad', 'bad', 'Normal', 'Good', 'Very good']\" />\n        </div>\n        <p v-if=\"error\">{{error}}</p>\n        <div @click=\"submit\">Submit</div>\n    </div>\n</template>\n\n<script>\n    import Vue from 'vue'\n    import rate from 'vue-rate'\n    import 'vue-rate/dist/vue-rate.css'\n    import axios from 'axios';\n\n\n    Vue.use(rate)\n    export default {\n        name: 'Home',\n        props: {\n            team: String,\n        },\n        data: () => ({\n            questions: [{\n                title: \"Appearance\",\n                value: null\n            },\n            {\n                title: \"Taste\",\n                value: null\n            }, {\n                title: \"Creativity\",\n                value: null\n            }, {\n                title: \"Portion Size\",\n                value: null\n            },{\n                title: \"Texture\",\n                value: null\n            }],\n            answers:[],\n            error: null    \n        }),\n        methods: {\n            submit() {\n                //verify all filled in\n                // this.questions.forEach(q => {\n                //     if (q.value==null){\n                //         this.error = \"fill all please!\"\n                //         return\n                //     }\n                // });\n                //  save it somewhere\n                // const fs = require('fs');\n                // let data = JSON.stringify(this.question, null, 2);\n                \n                // fs.writeFile('test.json', data, (err) => {\n                //     if (err) throw err;\n                //     console.log('Data written to file');\n                // });\n                // axios.defaults.headers.post['Content-Type'] ='application/x-www-form-urlencoded';\n                axios.get(\"localhost:8081/test\")  \n                .then(response => {\n                    console.log(response)\n                })    \n                console.log(\"prpo\",this.team)\n            },\n            onAftereRate(rate, question) {\n                question.value= rate;\n                \n            }\n        }\n    }\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    .page {\n        margin: auto;\n        width: 250px;\n    }\n</style>"],"sourceRoot":"src/components"}]}